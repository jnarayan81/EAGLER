CP = g++
CP_VERSIONS = g++-4.8 g++-4.9

NAME = scaffolder

SRC_DIR = ../src
OBJ_DIR = obj

CP_FLAGS += -std=c++11
CP_FLAGS += -I../vendor/seqan/include
CP_FLAGS += -I../lib
CP_FLAGS += -W -Wall -Wno-long-long -pedantic -Wno-variadic-macros
LD_FLAGS =

CPP_FILES = $(shell find $(SRC_DIR) -type f -iname \*.cpp)
OBJ_FILES = $(subst $(SRC_DIR), $(OBJ_DIR), $(addsuffix .o, $(basename $(CPP_FILES))))
DEP_FILES = $(OBJ_FILES:.o=.d)

UNAME_S := $(shell uname -s)

ifeq ($(UNAME_S),Linux)
	# add rt library linking on Linux OS
	LD_FLAGS+=-lrt
endif
ifeq ($(UNAME_S),Darwin)
	# attempts to select the highest g++ version available

	compiler := $(shell g++-4.8 --version 2>/dev/null)
	ifdef compiler
		CP = g++-4.8
	endif

	compiler := $(shell g++-4.9 --version 2>/dev/null)
	ifdef compiler
		CP = g++-4.9
	endif

	compiler := $(shell g++-5 --version 2>/dev/null)
	ifdef compiler
		CP = g++-5
	endif
endif

default: all

all: $(NAME) $(OBJ_FILES)

$(NAME): $(OBJ_FILES)
	@echo [LD] $@
	@$(CP) $(LD_FLAGS) -o $@ $^

$(OBJ_DIR)/%.o: $(SRC_DIR)/%.cpp
	@echo [CP] $<
	@mkdir -p $(dir $@)
	@$(CP) $(CP_FLAGS) -c -MMD -o $@ $<

clean:
	@echo [RM] cleaning $(MODULE)
	@rm -rf $(OBJ_DIR) $(NAME)

.PHONY: default all clean

-include $(DEP_FILES)
